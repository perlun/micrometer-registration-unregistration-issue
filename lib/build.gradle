plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'io.micrometer:micrometer-registry-prometheus:1.10.2'
    implementation 'org.slf4j:slf4j-api:1.7.29'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    testImplementation 'org.assertj:assertj-core:3.23.1'
}

tasks.named( 'test' ) {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    // Runs test classes in parallel, but methods inside in a test class sequentially.
    systemProperty 'junit.jupiter.execution.parallel.enabled', true
    systemProperty 'junit.jupiter.execution.parallel.mode.default', 'same_thread'
    systemProperty 'junit.jupiter.execution.parallel.mode.classes.default', 'concurrent'
}
